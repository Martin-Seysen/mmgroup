The *mmgroup* package has been used in several research projects. In
some of these projects, elements of the Monster group have been stored
permanently in a file or published in a research paper. Here it is
important to understand how elements of the Monster should be stored
permanently, and how they should be reread into an application using
a different version of the *mmgroup* package.

Short recommendation:

Always convert elements of the Monster group to strings before
storing them permanently or publishing them! Always convert such
strings to instances of class |MM| before using them!

Detailed explanation:

For permanent storage, an element of the Monster given as an instance
of class |MM| should be converted to a string by using one of the
standard python functions ``str`` or ``print``. We will ensure that
future versions of the *mmgroup* package can interpret such a string
correctly. Here Release 0.0.8 of the *mmgroup* package is
interoperable with all later releases. The standard way to convert
such a string back to an instance of class |MM| is to apply the
constructor of that class to that string.

Comparing elements of the Monster by comparing strings is not
feasible. Here the strings should be converted to instances of
class |MM| before comparing them. One reason for this restriction
is that at present we do not know how to find a shortest
possible reduced form of an element. So future versions of
*mmgroup* may implement better reduction algorithms.

Method ``as_int`` of class |MM| converts an element of the Monster
group to an integer. It is ok to compare two such integers when they
have been generated by the same version of the *mmgroup* package.
When switching to a new version, such integers should be converted
to instances of class |MM| using function  ``MM_from_int`` in the
*mmgroup* package; and then they should be converted to strings.
Pickling instances of class |MM| with the standard python module
``pickle`` is also discouraged, when switching to another version
of the *mmgroup* package.
